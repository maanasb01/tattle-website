{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 u_resolution;\nuniform float shadow;\nuniform float highlight;\nuniform float balance;\nuniform shader u_tex0;\nuniform half2 u_tex0_size;\n\nvec4 fragColor;\n\nvec3 shadows;\nvec3 highlights;\nmat3 matRGBtoXYZ;\nmat3 matXYZtoRGB;\nmat3 matAdapt;\nmat3 matAdaptInv;\nvec3 refWhiteRGB;\nvec3 d;\nvec3 s;\nvec3 refWhite;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nfloat FLT_flutter_local_Lum(vec3 c)\n{\n    return ((0.2989999949932098388671875 * c.x) + (0.58700001239776611328125 * c.y)) + (0.114000000059604644775390625 * c.z);\n}\n\nvec3 FLT_flutter_local_RGBtoXYZ(vec3 rgb)\n{\n    vec3 xyz = matRGBtoXYZ * rgb;\n    vec3 XYZ = matAdapt * xyz;\n    XYZ *= (d / s);\n    xyz = matAdaptInv * XYZ;\n    return xyz;\n}\n\nvec3 FLT_flutter_local_XYZtoRGB(inout vec3 xyz)\n{\n    vec3 RGB = matAdapt * xyz;\n    vec3 rgb;\n    rgb *= (s / d);\n    xyz = matAdaptInv * RGB;\n    rgb = matXYZtoRGB * xyz;\n    return rgb;\n}\n\nvoid FLT_main()\n{\n    shadows = vec3(shadow);\n    highlights = vec3(highlight);\n    matRGBtoXYZ = mat3(vec3(0.412456452846527099609375, 0.21267284452915191650390625, 0.0193338952958583831787109375), vec3(0.357576072216033935546875, 0.71515214443206787109375, 0.119192026555538177490234375), vec3(0.18043749034404754638671875, 0.0721749961376190185546875, 0.950304090976715087890625));\n    matXYZtoRGB = mat3(vec3(3.240454196929931640625, -0.96926605701446533203125, 0.055643431842327117919921875), vec3(-1.537138462066650390625, 1.876010894775390625, -0.20402590930461883544921875), vec3(-0.498531401157379150390625, 0.0415560193359851837158203125, 1.05722522735595703125));\n    matAdapt = mat3(vec3(0.89509999752044677734375, -0.750199973583221435546875, 0.0388999991118907928466796875), vec3(0.2664000093936920166015625, 1.71350002288818359375, -0.06849999725818634033203125), vec3(-0.16140000522136688232421875, 0.0366999991238117218017578125, 1.02960002422332763671875));\n    matAdaptInv = mat3(vec3(0.986992895603179931640625, 0.432305276393890380859375, -0.00852866470813751220703125), vec3(-0.147054255008697509765625, 0.51836025714874267578125, 0.0400428213179111480712890625), vec3(0.15996265411376953125, 0.0492912270128726959228515625, 0.96848666667938232421875));\n    refWhiteRGB = vec3(1.0);\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord();\n    vec2 st = FLT_flutter_local_FlutterFragCoord() / u_resolution;\n    vec3 base = u_tex0.eval(u_tex0_size *  st).xyz;\n    vec3 param = base;\n    float lum = FLT_flutter_local_Lum(param);\n    float mask = 1.0 - pow(lum, 2.7200000286102294921875);\n    vec3 illum = vec3(0.950469970703125, 1.0, 1.08882999420166015625);\n    refWhite = mix((illum * shadows) * 2.0, (illum * highlights) * 2.0, vec3(clamp(lum + balance, 0.0, 1.0)));\n    refWhite = mix(illum, refWhite, vec3(mask));\n    refWhiteRGB = vec3(illum.x, 1.0, illum.z);\n    d = matAdapt * refWhite;\n    s = matAdapt * refWhiteRGB;\n    vec3 param_1 = base;\n    vec3 xyz_1 = FLT_flutter_local_RGBtoXYZ(param_1);\n    vec3 param_2 = xyz_1;\n    vec3 _237 = FLT_flutter_local_XYZtoRGB(param_2);\n    vec3 rgb_1 = _237;\n    vec3 res = rgb_1;\n    fragColor = vec4(res, 1.0);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "u_resolution",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 1,
      "name": "u_tex0",
      "rows": 1,
      "type": 12
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 2,
      "name": "shadow",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 3,
      "name": "highlight",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 4,
      "name": "balance",
      "rows": 1,
      "type": 10
    }
  ]
}